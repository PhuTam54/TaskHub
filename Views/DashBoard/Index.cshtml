@model TaskHub.Models.WorkSpaceViewModels.WorkSpaceIndexData

@{
    ViewData["Title"] = "DashBoard";
}

<!-- Content Wrapper. Contains page content -->
<div class="">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Dashboard</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item active">Dashboard</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <!-- Small boxes (Stat box) -->
            <div class="row">
                <div class="col-lg-4 col-6">
                    <!-- small box -->
                    <div class="small-box bg-info">
                        <div class="inner">
                            <h3>@Model.WorkSpaces.Count()</h3>
                            <p>WorkSpaces</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-bag"></i>
                        </div>
                        <a href="/WorkSpaces" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-4 col-6">
                    <!-- small box -->
                    <div class="small-box bg-success">
                        <div class="inner">
                            @{
                                var boardCounter = 0;
                            }
                            @foreach (var item in @Model.WorkSpaces)
                            {
                                @foreach (var board in item.Boards)
                                {
                                    boardCounter++;
                                }
                            }
                            <h3>@boardCounter<sup style="font-size: 20px"></sup></h3>
                            <p>Boards</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-stats-bars"></i>
                        </div>
                        <a href="/WorkSpaces" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-4 col-6">
                    <!-- small box -->
                    <div class="small-box bg-warning">
                        <div class="inner">
                            <h3>@Model.Users.Count()</h3>

                            <p>Users</p>
                        </div>
                        <div class="icon">
                            <i class="ion ion-person-add"></i>
                        </div>
                        <a href="/Users" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">User chart</h4>
                        <canvas id="barChart1" style="height:230px"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Total chart</h4>
                        <canvas id="doughnutChart" style="height:250px"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12 grid-margin">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Users</h4>
                        <div class="table-responsive">
                            <table class="table">
                                <div class="card-body">
                                    <table id="example2" class="table table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th>No.</th>
                                                <th>Avatar</th>
                                                <th>Name</th>
                                                <th>Email</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                            <tbody>
                                @{
                                    var index = 0;
                                }
                                @foreach (var item in Model.Users)
                                {
                                    index++;
                                    string selectedRow = "";
                                    if (item.ID == (int?)ViewData["UserID"])
                                    {
                                        selectedRow = "table-success";
                                    }
                                    <tr class="@selectedRow">
                                        <td>@index</td>
                                        <td class="">
                                            <img src="@Html.DisplayFor(modelItem => item.Avatar)" width="60" style="max-height: 100px; object-fit: cover" alt="img">
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.UserName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Email)
                                        </td>
                                                 
                                        <td class="project-actions text-center">
                                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-secondary btn-sm">
                                                <i class="fas fa-eye">
                                                </i>
                                                Details
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-info btn-sm">
                                                <i class="fas fa-pencil-alt">
                                                </i>
                                                Edit
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.ID" class="btn">
                                                <button class="btn btn-danger btn-sm" style="margin-left: -12px" type="submit">
                                                    <i class="fas fa-trash">
                                                    </i>
                                                    Delete
                                                </button>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                                <tfoot>
                                    <tr>
                                        <th>No.</th>
                                        <th>Avatar</th>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Action</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div> 
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
            type: "POST",
            url: "/Home/GetToTalUsers",
            data: "",
            contentType: "application/json; charset=utf8",
            dataType: "json",
            success: OnSuccess,
        });
        function OnSuccess(data) {
            const barChart1 = document.getElementById('barChart1');
            const doughnutChart1 = document.getElementById('doughnutChart1');
            const myChart = document.getElementById('myChart');
            var _data = data;
            var _labels = _data[0];
            var _ChartData = _data[1];
            var backColor = [
                'rgba(255, 99, 132, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(255, 205, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(201, 203, 207, 0.2)'
            ];
            var borColor = [
                'rgb(255, 99, 132)',
                'rgb(255, 159, 64)',
                'rgb(255, 205, 86)',
                'rgb(75, 192, 192)',
                'rgb(54, 162, 235)',
                'rgb(153, 102, 255)',
                'rgb(201, 203, 207)'
            ];

            new Chart(barChart1, {
                type: 'bar',
                data: {
                    labels: _labels,
                    datasets: [{
                        backgroundColor: backColor,
                        borderColor: borColor,
                        data: _ChartData,
                        borderWidth: 1,
                    }]
                }
            });

            new Chart(doughnutChart1, {
                type: 'doughnut1',
                data: {
                    labels: _labels,
                    datasets: [{
                        backgroundColor: backColor,
                        borderColor: borColor,
                        data: _ChartData,
                        borderWidth: 1,
                    }]
                }
            });
        }
    });
</script>
<script type="text/javascript">
    $(function () {
        $.ajax({
            type: "POST",
            url: "/Home/GetToTal",
            contentType: "application/json; charset=utf8",
            dataType: "json",
            success: function (data) {
                // Dữ liệu trả về từ controller
                var totalData = data;

                // Dữ liệu cho biểu đồ doughnut
                var doughnutPieData = {
                    datasets: [{
                        data: totalData,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(54, 162, 235, 0.5)',
                            'rgba(255, 206, 86, 0.5)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)'
                        ],
                    }],

                    labels: [
                        'Users',
                        'WorkSpaces',
                        'WorkSpaceMembers',
                    ]
                };
                var doughnutPieOptions = {
                    responsive: true,
                    animation: {
                        animateScale: true,
                        animateRotate: true
                    }
                };

                var doughnutChartCanvas = $("#doughnutChart").get(0).getContext("2d");

                var doughnutChart = new Chart(doughnutChartCanvas, {
                    type: 'doughnut',
                    data: doughnutPieData,
                    options: doughnutPieOptions
                });
            }
        });
    });

</script>